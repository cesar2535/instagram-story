{"version":3,"sources":["layouts/logo.svg","components/StoryTransformer.js","layouts/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","xy","swiping","lastEventData","undefined","start","getDirection","absX","absY","deltaX","deltaY","StoryTransformer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTransitionEnd","setState","index","processing","onChanged","_setTransientState","callback","transientState","handleTouchStart","event","touches","length","state","_ref","clientX","clientY","objectSpread","timeStamp","handleTouchMove","_ref2","Math","abs","time","velocity","sqrt","delta","dir","eventData","handleTouchEnd","goTo","error","onError","type","initialize","_this$state","react_default","a","createElement","Scene","Container","onTransitionEnd","renderCard","renderTransitionCard","idx","_this2","isClickable","onTouchStart","onTouchEnd","onTouchMove","Card","assign","key","CardMedia","renderMedia","ClickableLeft","onClick","list","ClickableRight","CardCover","renderCover","id","_this$props","indexOf","TypeError","n","arguments","nextIdx","isNaN","Error","concat","getIdByIndex","React","PureComponent","defaultProps","swipedDelta","styled_base_browser_esm","target","name","styles","_ref3","_ref4","next","previous","current","Clickable","VIDEO_LIST","charA","charB","charCodeAt","end","map","code","String","fromCharCode","range","genCharList","CoverTest","children","renderChar","char","App_CoverTest","className","MediaTest","renderVideo","url","App_MediaTest","style","width","height","src","autoPlay","muted","App","components_StoryTransformer","Boolean","window","location","hostname","match","ReactDOM","render","layouts_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68052c5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled/macro';\nimport css from '@emotion/css/macro';\n\nconst initialState = {\n  xy: [0, 0],\n  swiping: false,\n  lastEventData: undefined,\n  start: undefined\n};\n\nconst getDirection = (absX, absY, deltaX, deltaY) => {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return 'LEFT';\n    }\n    return 'RIGHT';\n  } else if (deltaY > 0) {\n    return 'UP';\n  }\n  return 'DOWN';\n};\n\nclass StoryTransformer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.transientState = { ...initialState, type: 'class' };\n    this.initialize();\n    this.state = { index: this.index };\n  }\n\n  render() {\n    const { index, processing } = this.state;\n    return (\n      <Scene>\n        <Container\n          processing={processing}\n          onTransitionEnd={this.handleTransitionEnd}\n        >\n          {this.renderCard('current', index)}\n          {this.renderTransitionCard(processing, index)}\n        </Container>\n      </Scene>\n    );\n  }\n\n  renderCard(type, idx) {\n    const isClickable = type === 'current';\n    const props = isClickable\n      ? {\n          onTouchStart: this.handleTouchStart,\n          onTouchEnd: this.handleTouchEnd,\n          onTouchMove: this.handleTouchMove\n        }\n      : {};\n\n    return (\n      <Card {...props} key={idx} processing={type}>\n        <CardMedia>\n          {this.renderMedia(idx)}\n          {isClickable && idx > 0 && (\n            <ClickableLeft onClick={() => this.goTo(-1)} />\n          )}\n          {isClickable && idx + 1 < this.props.list.length && (\n            <ClickableRight onClick={() => this.goTo(1)} />\n          )}\n        </CardMedia>\n        <CardCover>{this.renderCover(idx)}</CardCover>\n      </Card>\n    );\n  }\n\n  renderTransitionCard(processing, idx) {\n    if (processing == null) return null;\n\n    const index = processing === 'previous' ? idx - 1 : idx + 1;\n    return this.renderCard(processing, index);\n  }\n\n  renderMedia(idx) {\n    const { list } = this.props;\n    const id = list.length > 0 ? list[idx] : this.props.id\n    return this.props.renderMedia(id, idx, list);\n  }\n\n  renderCover(idx) {\n    const { list } = this.props;\n    const id = list.length > 0 ? list[idx] : this.props.id\n    return this.props.renderCover(id, idx, list);\n  }\n\n  initialize() {\n    const { id, list } = this.props;\n    const idx = list.indexOf(id);\n\n    if (idx !== -1) {\n      this.index = idx;\n    }\n  }\n\n  getIdByIndex(idx) {\n    if (idx == null) return null;\n\n    const { list } = this.props;\n    const id = list[idx];\n\n    if (typeof id !== 'string') {\n      throw new TypeError('The list item must be a unique string');\n    }\n    return id;\n  }\n\n  goTo(n = 0) {\n    const nextIdx = this.index + n;\n    if (isNaN(nextIdx)) {\n      throw new TypeError('The argument of the goTo function must be a number');\n    }\n\n    if (nextIdx < 0 || nextIdx + 1 > this.props.list.length) {\n      throw new Error(`this index ${nextIdx} is out of the list.`);\n    }\n\n    this.index = nextIdx;\n    this.id = this.getIdByIndex(this.index);\n\n    if (n > 0) {\n      this.processing = 'next';\n    } else if (n < 0) {\n      this.processing = 'previous';\n    } else {\n      this.processing = null;\n    }\n\n    this.setState({ processing: this.processing });\n  }\n\n  handleTransitionEnd = () => {\n    this.setState({ index: this.index, processing: null });\n    this.props.onChanged(this.index);\n  };\n\n  _setTransientState = callback =>\n    (this.transientState = callback(this.transientState, this.props));\n\n  handleTouchStart = event => {\n    if (event.touches && event.touches.length > 1) return;\n\n    this._setTransientState(state => {\n      const { clientX, clientY } = event.touches ? event.touches[0] : event;\n      return {\n        ...state,\n        ...initialState,\n        xy: [clientX, clientY],\n        start: event.timeStamp || 0\n      };\n    });\n  };\n  handleTouchMove = event => {\n    this._setTransientState((state, props) => {\n      if (\n        !state.xy[0] ||\n        !state.xy[1] ||\n        (event.touches && event.touches.length > 1)\n      ) {\n        return state;\n      }\n\n      const { clientX, clientY } = event.touches ? event.touches[0] : event;\n      const deltaX = state.xy[0] - clientX;\n      const deltaY = state.xy[1] - clientY;\n      const absX = Math.abs(deltaX);\n      const absY = Math.abs(deltaY);\n      const time = (event.timeStamp || 0) - state.start;\n      const velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n\n      if (absX < props.delta && absY < props.delta && !state.swiping)\n        return state;\n\n      const dir = getDirection(absX, absY, deltaX, deltaY);\n      const eventData = { event, absX, absY, deltaX, deltaY, velocity, dir };\n\n      return { ...state, lastEventData: eventData, swiping: true };\n    });\n  };\n  handleTouchEnd = event => {\n    this._setTransientState((state, props) => {\n      if (state.swiping) {\n        const eventData = { ...state.lastEventData, event };\n\n        if (eventData.velocity > 0.5) {\n          try {\n            if (eventData.dir === 'RIGHT') {\n              this.goTo(-1);\n            } else if (eventData.dir === 'LEFT') {\n              this.goTo(1);\n            }\n          } catch (error) {\n            this.props.onError(error);\n          }\n        }\n      }\n\n      return { ...state, ...initialState };\n    });\n  };\n}\n\nStoryTransformer.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string),\n  swipedDelta: PropTypes.number,\n  renderMedia: PropTypes.func,\n  renderCover: PropTypes.func,\n  onChanged: PropTypes.func,\n  onError: PropTypes.func\n};\n\nStoryTransformer.defaultProps = {\n  list: [],\n  swipedDelta: 10,\n  renderMedia: () => null,\n  renderCover: () => null,\n  onChanged: () => null,\n  onError: () => null\n};\n\nconst Scene = styled.div`\n  width: 100%;\n  height: 100%;\n  perspective: 1000px;\n  perspective-origin: 50% 50%;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  height: 100%;\n  transform-style: preserve-3d;\n  will-change: transform;\n\n  ${({ processing }) =>\n    processing === 'next'\n      ? `\n        transform: translateZ(-50vw) rotateY(-90deg);\n        transition: transform 350ms;\n      `\n      : processing === 'previous'\n      ? `\n        transform: translateZ(-50vw) rotateY(90deg);\n        transition: transform 350ms;\n      `\n      : 'transform: translateZ(-50vw)'};\n`;\n\nconst Card = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n\n  ${({ processing }) =>\n    processing === 'next'\n      ? next\n      : processing === 'previous'\n      ? previous\n      : current};\n`;\n\nconst current = css`\n  transform: translateZ(50vw);\n`;\nconst next = css`\n  transform: rotateY(90deg) translateX(50%);\n  transform-origin: top right;\n`;\nconst previous = css`\n  transform: rotateY(-90deg) translateX(-50%);\n  transform-origin: center left;\n`;\n\nconst CardMedia = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst CardCover = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n`;\n\nconst Clickable = styled.button`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  margin: 0;\n  border: 0;\n  padding: 0;\n  height: 100%;\n  background: none;\n  outline: 0;\n`;\nconst ClickableLeft = styled(Clickable)`\n  left: 0;\n  width: 25%;\n\n  &:active {\n    background: linear-gradient(\n      to right,\n      rgba(0, 0, 0, 0.25),\n      rgba(0, 0, 0, 0) 75%\n    );\n  }\n`;\nconst ClickableRight = styled(Clickable)`\n  right: 0;\n  width: 75%;\n`;\n\nexport default StoryTransformer;\n","import React from 'react';\nimport { map, range } from 'ramda';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport StoryTransformer from '../components/StoryTransformer';\n\nconst genCharList = (charA, charB) => {\n  const start = charA.charCodeAt(charA);\n  const end = charB.charCodeAt(charB) + 1;\n  return map(code => String.fromCharCode(code), range(start, end));\n};\nconst LIST = genCharList('a', 'z');\nconst VIDEO_LIST = [\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerEscapes.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerFun.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerMeltdowns.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/Sintel.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/SubaruOutbackOnStreetAndDirt.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/TearsOfSteel.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/VolkswagenGTIReview.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/WeAreGoingOnBullrun.mp4',\n  'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/WhatCarCanYouGetForAGrand.mp4'\n];\n\nclass CoverTest extends React.PureComponent {\n  componentDidMount() {}\n\n  render() {\n    return this.props.children;\n  }\n}\n\nfunction renderChar(char) {\n  return (\n    <CoverTest>\n      <div className=\"App-character\">{char}</div>;\n    </CoverTest>\n  );\n}\n\nclass MediaTest extends React.PureComponent {\n  componentDidMount() {}\n\n  render() {\n    return this.props.children;\n  }\n}\n\nfunction renderVideo(url) {\n  return (\n    <MediaTest>\n      <video\n        className=\"App-video\"\n        style={{ width: '100%', height: '100%' }}\n        src={url}\n        autoPlay\n        muted\n      />\n    </MediaTest>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <StoryTransformer\n          id={VIDEO_LIST[0]}\n          list={VIDEO_LIST}\n          renderCover={renderChar}\n          renderMedia={renderVideo}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}